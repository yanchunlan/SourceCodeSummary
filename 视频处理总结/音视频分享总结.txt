一.	视频热度模型分析
	1. 视频热度定义
	视频观看时长，视频观看量，点赞量，评论量，下载量
	任何可以衡量视频受欢迎程度的指标
	2. 怎么评估热度
		1>	设定多个指标（粉丝量）
		2>	机器学习分类模型中找到高热度作品
	3.	模型中优质视频定义
		基础属性（时长，上传方式，分辨率，帧率）
		美学特征（画面对称性，高频信息比重，平稳程度，三分构图法，转场次数）
		清晰度特征（画面块效应，清晰度评分，镜头赃物程度）
		打分（低质量，恶心分，封面党，卖惨分）
	4.	实用性
		1>	优质视频寻找方式
			打上标签->j建立模型->寻找优质视频
		2>	中台转码策略
			当前：发布到阀值，且高热度的作品转码
			更改：预测视频未来热度->建立模型->打上标签
		3>	视频下载预热
			预测未来下载量是否超过一定值->作品属性，作者属性建立模型->输出模型
	5. 模型给出的结论
		搜索等级
		生产者分级
		作者粉丝量
		同粉丝级别

二.	HDR技术介绍
	1. HDR是什么
		韦伯-费希纳定律
	2. HDR编码
		1>	种类
			线性编码：效率低
			HLG编码：兼容现有
			PQ编码：高效
		2>	HDR视频编码传输流程：
			编码 -> oetf -> 编码 - 存储/传输 - 解码-> eotf -> 显示
			eotf:电光转换函数
			oetf光电转换函数
	3. HDR显示
		HDR解析信息展示
			win10 potplayer 解析
	4. HDR在快手的应用开发：SDR2HDR算法
		基于深度学习的HDR视频生成，SI-HDR
		1>	流程
			8bit SDR视频 -> 解码成图片 -> 8bit图像 -> SI-DHDRNetwork -> 16bit.hdr文件 ->
			tone mapping -> 10bit图像 -> 写入元数据编码
		2>	基于传统方法的HDR视频生成
			8bit SDR -> 非线性BT.709RGB -> EOTF -> 线性BT.709RGB -> 线性BT.2020RGB -> OETF -> 非线性BT.2020RGB -> 非线性调整 -> 10bit HDR
		3>	调整
			亮度自适应调整
			饱和度调整
		4>	未来展望
			HDR硬件，未来3-5年必定普及
			HDR算法，从标准规范，生成，到编码等全链路需要发展
			设备支持情况，iphone越来越支持

三. 中台自动化 benchmark
	编辑裁剪-编辑预览： 视频需要压缩
	旧压缩策略：
		1. 硬解需要压缩，软解不需要压缩
		2. 硬解芯片白名单 + 硬编本地全量测试
			白名单方式：线下测试+白名单开启ab+监控qos指标
			app冷启动+系统空闲开启测试+存储本地测试结果
	当前策略：
		1.	客户端请求下发配置（机型黑白名单/芯片白名单）
		2.	启动benchmark测试（软编，硬编，硬解）
		3.	上报测试结果数据
	拓展：
		1.	未来可测试项
			特殊feature，oom，gpu性能，cpu性能，
		2.	具体应用位置
			每个阶段的功能决策，分辨率，编解码，预加载等
		3.	上报数据归一化生成统一机型画像

四.	kvc-1.0算法
	1.	实现优化
		快速算法优化
		编译器架构及底层汇编加速
		编译器上层算法及参数优化
	2.	转码服务及消费策略
		算法上线链路长
		实验数据分析复杂
	3.	总结与收获
	4.	未来展望

五.	color harmonization算法的开发与优化
	1.	harmonization是什么
	2.	


六.	deart(de-artifacting filter)和SR算法的开发与优化
	主要后台处理，用于处理导入视频的清晰度，桢率提升
	流程：上传后台 -> 【判断分析触发 deart/SR -> 替换视频源】 -> 转码
	设计：

	SR:
		网络选型 -> 最佳性价比网络 -> 网络训练

七.	Atlas和visionEngine的介绍

八.	杜比声音
	实质就是营造一个3d的声音效果

九.	ReactNative
	主要是js生成view去渲染控件流程，主要讲述了一些简单的原理

十.	多摄像头处理
	1.	framework/kernel层相机源码支持
	2.	在deanery与westeros对其的支持

十一. 短视频编辑底层设计
	需求
	流程
	覆盖功能模块
	框架
	编解码
		编解码测试
	渲染模型
	从移动端到后端
		优化策略：分片并行，音频单独处理，支持remux
	当前工作-编排
	规划
		opengl/metal/vulkan
		tracing/memoryinfra

十二. 播放器上视频渲染与后处理
	视频后处理场景
	播放器视频渲染现状
	视频后处理库设计与实现
		输入输出
		抽象实现
		完善的回退策略
	后处理优化，遇到的坑
		算法优化-lut存储算法结果
		丢帧优化
		流程重新梳理

十三. 视频deLogo算法的开发与优化(痕迹去除算法)
	1.	atlas libavfilter
		输入 ->	指定区域 -> 痕迹去除(痕迹识别->痕迹填充->模型精度与处理链路) -> 输出
		1>	痕迹识别
			框架->有效帧范围->精细掩模->结果
		2>	痕迹填充
			算法横向对比：
				图像差值算法
				图像补全算法
				深度网格图像补全
				改进点：
					
		3>	模型精度与处理链路

十四. video转gif
	背景
	方向
		社交平台/网络新闻/广告宣传/视频预览
	过程
		基于表情识别
		基于动作识别
	思考与展望
		配字问题
		趣味性问题
		准确率提升
		产品形态
		
十五. 直播连麦信令架构


十六. 直播多码率
	
	
	
	






	



