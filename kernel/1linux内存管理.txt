一. 概述
	1. 内存管理演变史
	2. 物理内存
		直接操作物理内存有问题：
		1. 地址空间不隔离：操作相同空间崩溃
		2. 使用效率低：多进程无法操作超过物理内存大小内存
		3. 程序运行地址不确定：地址不确定，带来重定位的问题，每次都需要寻址
	3. 虚拟内存
	4. 虚拟内存划分
		用户空间内存
		内核空间内存

		32位操作系统，虚拟内存4G,用户空间3G,内核空间1G
		1>	用户空间与内涵空间互不干扰，用户进程（系统调用）在内核态才可以访问内核空间
		2>	每个进程用户空间互不干扰，内核空间则可以所有进程及内核共享
		3>	用户空间与内核空间都分别有自己的页表

		内核空间 1G
		进程1用户空间3G
		进程2用户空间3G
		进程3用户空间3G
	5.	虚拟地址与物理地址的映射方案
		分段和分页
		分段：将程序所需要的内存地址空间大小的虚拟空间映射到某个物理地址空间。
			解决了地址隔离，重定位问题，但是效率低
		分页：分为若干个很小固定大小的页，页大小4KB，常用数据装载在内存中，不常用代码和数据保存在磁盘中
			虚拟空间允许映射到不连续的物理地址空间，也允许共享内存
			缺页异常：当虚拟内存的虚拟页被交换到物理内存，当程序需要这2页时，内核产生一个缺页异常，然后异常管理程序将其读到内存中

		区别：
			分段是需要多大给你多大，分页是需要多大，给你4k一个个拼接，且分页需要硬件的实现，这个硬件名字叫MMU，专门负责从虚拟地址到物理地址的寻址工作
	6.	地址类型
		物理地址：通过地址寻址，找到真实的物理内存对应地址
		逻辑地址：出现在汇编程序中的地址
		虚拟地址：cpu寻址的空间范围，由cpu决定

二.	MMU
	cpu寻址能力
	

