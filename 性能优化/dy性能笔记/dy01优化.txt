一. 内存优化实践
    1. 背景
    2. 保障稳定性
       工具建设
            java内存泄露检测
            native内存泄露检测

               1. hook点确认
               2. 高性能回朔
                    1。 回朔动态库选取
                    2。 限制回朔频率
                    3。 建设无用栈回朔
                    4。 重入问题解决
                3。 数据匹配回捞消费
            GLObjects内存泄露检测
                hook libc:ioctl
       线下内存防裂化
            内存长采集和分析能力建设
                1。 prof进程使用多种接口进行profile
                2. Heapprofd接受数据进行聚合
                3. Traced整体监控和数据输出
            问题坐移效果
                内存问题提前在灰度之前抛出，争取解决问题的时间
        通用优化探索：java oom优化
            nativeBitmap方案
                1。 原方案java内存地方分配空对象
                2。 native层面完成实际的内存分配
                3。 及时回收假对象和native内存
            线程栈裁剪，栈裁剪到一半
    3. 提示性能

    4. 总结与展望


二. 网络优化实践


三. 客户端容灾体系建设实践


四. 播放体验实践


五.功耗优化实践