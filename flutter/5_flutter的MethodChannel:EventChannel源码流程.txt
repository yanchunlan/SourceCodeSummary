一	.	MethodChannel
	1. Flutter调用原生方法
		原生层：
			MethodChannel methodChannel = new MethodChannel(xxx, "com.example.methodChannel/test");
			methodChannel.setMethodCallHandler(new MethodChannel.MethodCallHandler() {
            	@Override
            	public void onMethodCall(@NonNull MethodCall call, @NonNull MethodChannel.Result result) {
                        switch (call.method){
                            case "getVersion":
                                result.success(1);
                                break;
                        }
            	}
        	});
        	
		flutter层：
			const MethodChannel _channel = MethodChannel("com.example.methodChannel/test");
			_channel.invokeMethod("getVersion", <String, dynamic>{// map参数});
			
	2. 原生调用Flutter方法
		原生层：
			MethodChannel methodChannel = new MethodChannel(xxx, "com.example.methodChannel/test");
			methodChannel.invokeMethod("getFlutterInfo", null, new MethodChannel.Result() {
            	@Override
           	 	public void success(@Nullable Object result) { }
            	@Override
           		 public void error(String errorCode, @Nullable String errorMessage, @Nullable Object errorDetails) {}
            	@Override
           		 public void notImplemented() {}
        });
		
		flutter层：
			const MethodChannel _channel = MethodChannel("com.example.methodChannel/test");
  			_channel.setMethodCallHandler((MethodCall call){
    			Completer<dynamic> completer = Completer();
   					 switch(call.method){
      					case "getFlutterInfo":
       					 completer.complete("Flutter info test");
        				break;
   					 }
    				return completer.future;
  			});
  			
二.	EventChannel
	