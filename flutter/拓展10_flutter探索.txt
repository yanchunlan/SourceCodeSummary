flutter方案探索
1.  混合框架
    混合容器：
        共享engine
        FlutterBoost
        
    动态化
        JavaScript实现逻辑，Skia渲染引擎，腾讯开源
        源码生成AST Json树，Dart VM执行AST，美团方案

    UI自动化测试：
        flutter app：main函数开启VMService
        脚本侧：通过WebSocket和InspectorService建立连接，去拿到Element ID

    组件库：
        https://github.com/LianjiaTech/bruno

2.  性能优化
    图片优化
        https://github.com/LianjiaTech/bk_flutter_image 【flutter通过纹理texture调用原生，安卓glide，ios用SDWebImage】
        https://github.com/alibaba/power_image
            
    流畅度优化
        https://github.com/LianjiaTech/keframe  【addPostFrameCallback第一帧之后setState刷新子Element】


    内存泄露监控
        https://github.com/liujiakuoyx/leak_detector/blob/main/README_zh-CN.md【利用VmService实现，类似jvmTI】
        原理：通过NavigatorObserver监听Route生命周期，didPush时拿到element/widget/state添加弱饮用集合列表，didPop时取值后延迟一段时间，执行gc后再开启compute分析弱饮用，分析完成后存储数据到onLeakedStream中
        关键函数：    1. 存储弱引用: expando[x] = x
                    2. 主动触发gc: vmService.getAllocationProfile(isolateId, gc: true);
                    3. 获取调用链信息： vmService.getRetainingPath(isolateId, objId, limit);


    应用内调试工具
        flutter_ume：https://github.com/bytedance/flutter_ume/blob/master/README_cn.md



3.  其他黑科技
    AspectD aop切面编程，https://github.com/alibaba-flutter/aspectd
        @Call不会修改原始方法的内部
        @Execute修改方法内部
