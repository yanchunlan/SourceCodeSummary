flutter方案探索
1.  混合框架
    混合容器：
        共享engine
        FlutterBoost
        
    动态化
        JavaScript实现逻辑，Skia渲染引擎，腾讯开源
        源码生成AST Json树，Dart VM执行AST，美团方案

    UI自动化测试：
        flutter app：main函数开启VMService
        脚本侧：通过WebSocket和InspectorService建立连接，去拿到Element ID

    组件库：
        https://github.com/LianjiaTech/bruno

2.  性能优化
    图片优化
        https://github.com/LianjiaTech/bk_flutter_image 【flutter通过纹理texture调用原生，安卓glide，ios用SDWebImage】
        https://github.com/alibaba/power_image
            
    流畅度优化
        https://github.com/LianjiaTech/keframe  【addPostFrameCallback第一帧之后setState刷新子Element】


    内存泄露监控
        https://github.com/liujiakuoyx/leak_detector/blob/main/README_zh-CN.md【利用VmService实现，类似jvmTI】
        原理：通过NavigatorObserver监听Route生命周期，didPush时拿到element/widget/state添加弱饮用集合列表，didPop时取值后延迟一段时间，执行gc后再开启compute分析弱饮用，分析完成后存储数据到onLeakedStream中
        关键函数：    1. 存储弱引用: expando[x] = x
                    2. 主动触发gc: vmService.getAllocationProfile(isolateId, gc: true);
                    3. 获取调用链信息： vmService.getRetainingPath(isolateId, objId, limit);


    应用内调试工具
        flutter_ume：https://github.com/bytedance/flutter_ume/blob/master/README_cn.md
            1>  Widget 信息：查看当前选中 widget 的树层级及 renderObject 的详细 build 链
                    获取build 链：InspectorSelection.currentElement，然后使用element.debugGetDiagnosticChain
                    获取RenderObject信息：element.RenderObject.toString()
            2>  ShowCode：查看到当前页面的页面代码
                    获取当前页widget文件名：遍历当前renderObject，按照大小选出当前widget
                                         WidgetInspectorService.getSelectedSummaryWidget获取到页面相关信息。提取creationLocation拿到当前 widget 文件地址
                    找到并读取脚本：VMService.getScripts 获取当前线程下所有库文件id和文件名
                                  比对上面文件名获取目标库id
                                  VMService.getObject获取当前id对应的对象，读取对象的source属性就是源码了
            3>  内存查看：查看当前Dart VM 对象所占用情况
                    获取externalUsage/heapCapacity/heapUsage：vm_service.getMemoryUsage获取到当前isolate所占用的信息
                    获取到每个类对象的内存信息：vm_service.getAllocationProfile拿到分配对象信息，通过members属性来获取到每个 class 所占用的堆信息
            4>  对齐标尺：测量当前 widget 所在屏幕的一个坐标位置，并吸附最近 widget
                    坐标显示：通过手势移动控件，根据屏幕的大小计算出当前距离
                    自动吸附：通过globalKey获取当前页面RenderObject，通过它的debugDescribeChildren获取到所有子节点，通过describeApproximatePaintClip获取当前对象坐标系rect,比对RenderObject大小，得到最靠近的widget
            5>  颜色吸附：查看当前页面任何像素的颜色
                    获取图片像素及颜色值：
                        截图：借助RepaintBoundary了，配合globalKey拿到截图
                        根据坐标获取图片当前像素值：Image.getPixelSafe再转换为argb格式
                    放大图片：
                        通过手势获取坐标，加上scale得出矩阵参数，赋值给ImageFilter.matrix得到放大背景图
            6>  网络调试：
                    编译时插桩从而达到对特定 API 的 Hook，主要是package:http/src/base_client.dart中BaseClient类中的_sendUnstreamed
            7>  Logger：展示debugPrint函数打印的日志
                    日志拦截：runZoned里面的zoneSpecification.print
                    通过hook的方式：仅hook debugPrint（即 package:flutter/src/foundation/print.dart 中 debugPrintThrottled 进行 hook ）
            8>  Channel Monitor：查看所有的 channel 调用，包括方法名，时间，参数，返回结果
                    hook package:flutter/src/services/platform_channel.dart中MethodChannel类的invokeMethod方法即可

3.  其他黑科技
    AspectD aop切面编程，https://github.com/alibaba-flutter/aspectd
        @Call不会修改原始方法的内部
        @Execute修改方法内部
    性能指标监控
        [ve_apm](https://pub.dev/packages/ve_apm/versions)
            页面测速：
                fp = 当前第一帧渲染时间 - didpush事件回调时间
                fcp = 检测到当前渲染树子节点是有效子节点（文字，图片，视频） - didpush事件回调时间
                fmp = 检测到当前渲染树中内容节点占用的Rect大小是都大于临界值时间 - didpush事件回调时间
            fps/丢帧
                SchedulerBinding.instance.addTimingsCallback 获取采样数据，页面push开始采集，pop结束。且计算丢帧表
                丢帧表：key 丢了几帧，value 发生次数
                列如：{ 0:12, 1:5, 2:10}
                    共有12次绘制的间隔<16ms以内，没有发生丢帧。
                    有5次绘制回调的间隔在 (1~2) * 16ms之间。
                    有10次绘制回调的间隔在 (3~6) * 16ms*4之间。
            异常/白屏率
                ErrorWidget.builder统计异常次数，runZonedGuarded统计全局异常，在全局异常上报时添加页面是否异常参数uiError
            channel耗时
                hook channel通道数据handlePlatformMessage,send来获取通道数据，计算method耗时
